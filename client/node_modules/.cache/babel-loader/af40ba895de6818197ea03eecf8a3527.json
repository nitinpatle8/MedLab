{"ast":null,"code":"var _jsxFileName = \"/home/hackerone/Documents/6thsem/reactjs_practice/MediCord/client/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport { userAtom, tokenAtom } from \"../global/globalState\";\n\nconst Login = ({\n  history\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [, setUser] = useRecoilState(userAtom);\n  const [, setToken] = useRecoilState(tokenAtom);\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n  const [selected, setSelected] = useState(\"user\");\n  var env = process.env.REACT_APP_API_URL;\n  console.log(env);\n\n  const handleLoginUser = () => {\n    Axios.post(`${env}/patient/signin`, {\n      email,\n      password\n    }).then(res => {\n      if (res.data.error) {\n        setErrors([{\n          msg: res.data.error\n        }]);\n      } else {\n        localStorage.setItem(\"user\", JSON.stringify(res.data.patient));\n        localStorage.setItem(\"token\", res.data.token);\n        setUser(res.data.patient);\n        setToken(res.data.token);\n        history.push(\"/dashboard\");\n      }\n    }).catch(err => {\n      if (Array.isArray(err.response.data.errors)) {\n        setErrors(err.response.data.errors);\n      } else {\n        setErrors([{\n          msg: err.response.data.error\n        }]);\n      }\n    });\n  };\n\n  const handleLoginDoc = () => {\n    Axios.post(`${env}/doctor/signin`, {\n      email,\n      password\n    }).then(res => {\n      if (res.data.error) {\n        setErrors([{\n          msg: res.data.error\n        }]);\n      } else {\n        console.log(res.data);\n        localStorage.setItem(\"user\", JSON.stringify(res.data.doctor));\n        localStorage.setItem(\"token\", res.data.token);\n        setUser(res.data.doctor);\n        setToken(res.data.token);\n        history.push(\"/dashboardDoc\");\n      }\n    }).catch(err => {\n      if (Array.isArray(err.response.data.errors)) {\n        setErrors(err.response.data.errors);\n      } else {\n        setErrors([{\n          msg: err.response.data.error\n        }]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }\n  }, \"HealthBridge\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }, \"Welcome to the Unified HealthCare Platform\")), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"art\",\n    src: require(\"../assets/svg/doc2.svg\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"pass\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    onClick: () => selected === \"user\" ? handleLoginUser() : handleLoginDoc(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 6\n    }\n  }, \"Log In\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, errors && errors.map(({\n    msg\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 8\n    }\n  }, msg))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selector-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"left\",\n    id: selected === \"user\" ? \"selected\" : \"\",\n    onClick: () => setSelected(\"user\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"right\",\n    id: selected === \"doctor\" ? \"selected\" : \"\",\n    onClick: () => setSelected(\"doctor\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, \"Doctor\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/hackerone/Documents/6thsem/reactjs_practice/MediCord/client/src/pages/Login.js"],"names":["React","useState","Axios","useRecoilState","userAtom","tokenAtom","Login","history","email","setEmail","setUser","setToken","password","setPassword","errors","setErrors","selected","setSelected","env","process","REACT_APP_API_URL","console","log","handleLoginUser","post","then","res","data","error","msg","localStorage","setItem","JSON","stringify","patient","token","push","catch","err","Array","isArray","response","handleLoginDoc","doctor","require","e","target","value","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport { userAtom, tokenAtom } from \"../global/globalState\";\n\nconst Login = ({ history }) => {\n\tconst [email, setEmail] = useState(\"\");\n\tconst [, setUser] = useRecoilState(userAtom);\n\tconst [, setToken] = useRecoilState(tokenAtom);\n\tconst [password, setPassword] = useState(\"\");\n\tconst [errors, setErrors] = useState(null);\n\tconst [selected, setSelected] = useState(\"user\");\n\n\tvar env = process.env.REACT_APP_API_URL;\n\tconsole.log(env);\n\n\n\tconst handleLoginUser = () => {\n\t\tAxios.post(`${env}/patient/signin`, {\n\t\t\temail,\n\t\t\tpassword,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.error) {\n\t\t\t\t\tsetErrors([{ msg: res.data.error }]);\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\"user\",\n\t\t\t\t\t\tJSON.stringify(res.data.patient)\n\t\t\t\t\t);\n\t\t\t\t\tlocalStorage.setItem(\"token\", res.data.token);\n\t\t\t\t\tsetUser(res.data.patient);\n\t\t\t\t\tsetToken(res.data.token);\n\t\t\t\t\thistory.push(\"/dashboard\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (Array.isArray(err.response.data.errors)) {\n\t\t\t\t\tsetErrors(err.response.data.errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErrors([{ msg: err.response.data.error }]);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst handleLoginDoc = () => {\n\t\tAxios.post(`${env}/doctor/signin`, {\n\t\t\temail,\n\t\t\tpassword,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.error) {\n\t\t\t\t\tsetErrors([{ msg: res.data.error }]);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\"user\",\n\t\t\t\t\t\tJSON.stringify(res.data.doctor)\n\t\t\t\t\t);\n\t\t\t\t\tlocalStorage.setItem(\"token\", res.data.token);\n\t\t\t\t\tsetUser(res.data.doctor);\n\t\t\t\t\tsetToken(res.data.token);\n\t\t\t\t\thistory.push(\"/dashboardDoc\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (Array.isArray(err.response.data.errors)) {\n\t\t\t\t\tsetErrors(err.response.data.errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErrors([{ msg: err.response.data.error }]);\n\t\t\t\t}\n\t\t\t});\n\t};\n\treturn (\n\t\t<div className=\"Login\">\n\t\t\t<div className=\"left-bar\">\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div onClick={() => history.push(\"/\")}>\n\t\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\t\t<h1>HealthBridge</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tWelcome to the Unified HealthCare Platform\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"art\"\n\t\t\t\t\tsrc={require(\"../assets/svg/doc2.svg\")}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"main-login\">\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<div className=\"login-form\">\n\t\t\t\t\t<label htmlFor=\"email\">Email</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label htmlFor=\"pass\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"pass\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"primary\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tselected === \"user\"\n\t\t\t\t\t\t\t\t? handleLoginUser()\n\t\t\t\t\t\t\t\t: handleLoginDoc()\n\t\t\t\t\t\t}>\n\t\t\t\t\t\tLog In\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"error-container\">\n\t\t\t\t\t{errors &&\n\t\t\t\t\t\terrors.map(({ msg }, index) => (\n\t\t\t\t\t\t\t<div key={index} className=\"error\">\n\t\t\t\t\t\t\t\t{msg}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"selector-container\">\n\t\t\t\t\t<div className=\"selector\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"left\"\n\t\t\t\t\t\t\tid={selected === \"user\" ? \"selected\" : \"\"}\n\t\t\t\t\t\t\tonClick={() => setSelected(\"user\")}>\n\t\t\t\t\t\t\tUser\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"right\"\n\t\t\t\t\t\t\tid={selected === \"doctor\" ? \"selected\" : \"\"}\n\t\t\t\t\t\t\tonClick={() => setSelected(\"doctor\")}>\n\t\t\t\t\t\t\tDoctor\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}