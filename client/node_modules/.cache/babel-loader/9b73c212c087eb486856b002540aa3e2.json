{"ast":null,"code":"var _jsxFileName = \"/home/hackerone/Documents/6thsem/reactjs_practice/HealthBridge/client/src/pages/services/Heart.js\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { useRecoilValue } from \"recoil\";\nimport { tokenAtom } from \"../../global/globalState\";\n\nconst Heart = () => {\n  const token = useRecoilValue(tokenAtom);\n  const [result, setResult] = useState(null);\n  const [age, setAge] = useState(null);\n  const [bp, setBp] = useState(null);\n  const [fps, setFps] = useState(null);\n  const [chol, setChol] = useState(null);\n  const [sex, setSex] = useState(null);\n\n  const getResults = () => {\n    Axios.post(`http://127.0.0.1:5555/heart`, {\n      age,\n      sex,\n      cp: 0,\n      trestbps: 0,\n      chol,\n      fbs: fps,\n      bps: bp,\n      restecg: 0,\n      thalach: 0,\n      exang: 1,\n      oldpeak: 1,\n      slope: 1,\n      ca: 1,\n      thal: 1\n    }).then(res => {\n      console.log(res.data, \"ok\");\n      setResult(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, \"Heart Health Prediction\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }, \"Patients can know the health of their heart by providing very basic details.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heart-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"age\",\n    value: age,\n    onChange: e => setAge(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"bp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, \"Blood Pressure\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"bp\",\n    value: bp,\n    onChange: e => setBp(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"chol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }, \"Cholestrol\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"chol\",\n    value: chol,\n    onChange: e => setChol(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hbr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, \"Sugar\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"hbr\",\n    value: fps,\n    onChange: e => setFps(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }, \"Sex\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"blood_grp\",\n    value: sex,\n    onChange: e => setSex(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Female\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    onClick: () => getResults(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }, \"Get Result\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, result && result.result))));\n};\n\nexport default Heart;","map":{"version":3,"sources":["/home/hackerone/Documents/6thsem/reactjs_practice/HealthBridge/client/src/pages/services/Heart.js"],"names":["React","useState","Axios","useRecoilValue","tokenAtom","Heart","token","result","setResult","age","setAge","bp","setBp","fps","setFps","chol","setChol","sex","setSex","getResults","post","cp","trestbps","fbs","bps","restecg","thalach","exang","oldpeak","slope","ca","thal","then","res","console","log","data","catch","err","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { useRecoilValue } from \"recoil\";\nimport { tokenAtom } from \"../../global/globalState\";\n\nconst Heart = () => {\n\tconst token = useRecoilValue(tokenAtom);\n\tconst [result, setResult] = useState(null);\n\n\tconst [age, setAge] = useState(null);\n\tconst [bp, setBp] = useState(null);\n\tconst [fps, setFps] = useState(null);\n\tconst [chol, setChol] = useState(null);\n\tconst [sex, setSex] = useState(null);\n\n\tconst getResults = () => {\n\t\tAxios.post(`http://127.0.0.1:5555/heart`, {\n\t\t\tage,\n\t\t\tsex,\n\t\t\tcp: 0,\n\t\t\ttrestbps: 0,\n\t\t\tchol,\n\t\t\tfbs: fps,\n\t\t\tbps: bp,\n\t\t\trestecg: 0,\n\t\t\tthalach: 0,\n\t\t\texang: 1,\n\t\t\toldpeak: 1,\n\t\t\tslope: 1,\n\t\t\tca: 1,\n\t\t\tthal: 1,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data, \"ok\");\n\t\t\t\tsetResult(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"Heart\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Heart Health Prediction</h1>\n\t\t\t\t\t<p className=\"content\">\n\t\t\t\t\t\tPatients can know the health of their heart by providing\n\t\t\t\t\t\tvery basic details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"heart-form\">\n\t\t\t\t\t<label htmlFor=\"age\">Age</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"age\"\n\t\t\t\t\t\tvalue={age}\n\t\t\t\t\t\tonChange={(e) => setAge(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"bp\">Blood Pressure</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"bp\"\n\t\t\t\t\t\tvalue={bp}\n\t\t\t\t\t\tonChange={(e) => setBp(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"chol\">Cholestrol</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"chol\"\n\t\t\t\t\t\tvalue={chol}\n\t\t\t\t\t\tonChange={(e) => setChol(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"hbr\">Sugar</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"hbr\"\n\t\t\t\t\t\tvalue={fps}\n\t\t\t\t\t\tonChange={(e) => setFps(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label htmlFor=\"sex\">Sex</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tname=\"blood_grp\"\n\t\t\t\t\t\tvalue={sex}\n\t\t\t\t\t\tonChange={(e) => setSex(e.target.value)}>\n\t\t\t\t\t\t<option value=\"1\">Male</option>\n\t\t\t\t\t\t<option value=\"0\">Female</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<button className=\"primary\" onClick={() => getResults()}>\n\t\t\t\t\t\tGet Result\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"result\">\n\t\t\t\t\t<h3>{result && result.result}</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Heart;\n"]},"metadata":{},"sourceType":"module"}