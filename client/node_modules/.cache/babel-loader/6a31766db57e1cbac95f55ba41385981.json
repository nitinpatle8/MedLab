{"ast":null,"code":"var _jsxFileName = \"/home/hackerone/Documents/6thsem/reactjs_practice/MediCord/client/src/pages/services/Cancer.js\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport Dropzone from \"react-dropzone\";\n\nconst Cancer = () => {\n  const [result, setResult] = useState(null);\n  const [files, setFiles] = useState(null);\n\n  const getResults = () => {\n    const formData = new FormData();\n    formData.append(\"images\", files[files.length - 1]);\n    Axios.post(`http://127.0.0.1:5555/cancer`, formData).then(res => {\n      console.log(res.data, \"ok\");\n      setResult(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Cancer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }, \"Cancer Prediction\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }\n  }, \"Breast Cancer detection which will be able to predict whether the cells are cancerous or not.\")), /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: files => {\n      setFiles(files);\n      console.log(files);\n    },\n    accept: \"image/*\",\n    minSize: 1024,\n    maxSize: 3072000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, ({\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  }) => {\n    const additionalClass = isDragAccept ? \"accept\" : isDragReject ? \"reject\" : \"\";\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n      className: `dropzone ${additionalClass}`\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, isDragActive ? \"üìÇ\" : \"üìÅ\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Drag'n'drop images, or click to select files\"));\n  }), files && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selected-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, \"Selected File : \", files[files.length - 1].name), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    onClick: () => getResults(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \"Get results\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, result && result.cancer))));\n};\n\nexport default Cancer;","map":{"version":3,"sources":["/home/hackerone/Documents/6thsem/reactjs_practice/MediCord/client/src/pages/services/Cancer.js"],"names":["React","useState","Axios","Dropzone","Cancer","result","setResult","files","setFiles","getResults","formData","FormData","append","length","post","then","res","console","log","data","catch","err","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","additionalClass","className","name","cancer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport Dropzone from \"react-dropzone\";\n\nconst Cancer = () => {\n\tconst [result, setResult] = useState(null);\n\tconst [files, setFiles] = useState(null);\n\n\tconst getResults = () => {\n\t\tconst formData = new FormData();\n\t\tformData.append(\"images\", files[files.length - 1]);\n\t\tAxios.post(\n\t\t\t`http://127.0.0.1:5555/cancer`,\n\t\t\tformData\n\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data, \"ok\");\n\t\t\t\tsetResult(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"Cancer\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Cancer Prediction</h1>\n\t\t\t\t\t<p className=\"content\">\n\t\t\t\t\t\tBreast Cancer detection which will be able to predict\n\t\t\t\t\t\twhether the cells are cancerous or not.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Dropzone\n\t\t\t\t\tonDrop={(files) => {\n\t\t\t\t\t\tsetFiles(files);\n\t\t\t\t\t\tconsole.log(files);\n\t\t\t\t\t}}\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tminSize={1024}\n\t\t\t\t\tmaxSize={3072000}>\n\t\t\t\t\t{({\n\t\t\t\t\t\tgetRootProps,\n\t\t\t\t\t\tgetInputProps,\n\t\t\t\t\t\tisDragActive,\n\t\t\t\t\t\tisDragAccept,\n\t\t\t\t\t\tisDragReject,\n\t\t\t\t\t}) => {\n\t\t\t\t\t\tconst additionalClass = isDragAccept\n\t\t\t\t\t\t\t? \"accept\"\n\t\t\t\t\t\t\t: isDragReject\n\t\t\t\t\t\t\t? \"reject\"\n\t\t\t\t\t\t\t: \"\";\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t{...getRootProps({\n\t\t\t\t\t\t\t\t\tclassName: `dropzone ${additionalClass}`,\n\t\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t\t\t\t<span>{isDragActive ? \"üìÇ\" : \"üìÅ\"}</span>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tDrag'n'drop images, or click to select files\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Dropzone>\n\t\t\t\t{files && (\n\t\t\t\t\t<div className=\"selected-file\">\n\t\t\t\t\t\tSelected File : {files[files.length - 1].name}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<button className=\"primary\" onClick={() => getResults()}>\n\t\t\t\t\tGet results\n\t\t\t\t</button>\n\t\t\t\t<div className=\"result\">\n\t\t\t\t\t<h3>{result && result.cancer}</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Cancer;\n"]},"metadata":{},"sourceType":"module"}