{"ast":null,"code":"var _jsxFileName = \"/home/hackerone/Documents/6thsem/reactjs_practice/HealthBridge/client/src/components/darktoggle.js\";\nimport React, { useEffect, useState } from \"react\"; // import { useMediaQuery } from \"react-responsive\";\n\nimport Toggle from 'react-toggle';\nimport { BsMoon } from \"react-icons/bs\";\nimport { BsSun } from \"react-icons/bs\";\nconst DARK_CLASS = \"dark\";\n\nconst DarkToggle = () => {\n  const [isDark, setIsDark] = useState(false);\n  useEffect(() => {\n    try {\n      // console.log(\"checking dark ls\")\n      const dark = localStorage.getItem('prevState'); // console.log('prevState', dark)\n      // console.log(\"typeof dark\",typeof(dark))\n\n      if (dark != null) {\n        setIsDark(dark === 'true');\n\n        if (dark) {\n          document.documentElement.classList.add(DARK_CLASS);\n        } else {\n          document.documentElement.classList.remove(DARK_CLASS);\n        }\n      }\n    } catch (e) {}\n  }, []);\n  useEffect(() => {\n    // console.log(\"changin dark\",isDark)\n    if (isDark) {\n      document.documentElement.classList.add(DARK_CLASS);\n    } else {\n      document.documentElement.classList.remove(DARK_CLASS);\n    }\n  }, [isDark]); //  console.log(\"isDark\", isDark)\n\n  return /*#__PURE__*/React.createElement(Toggle, {\n    className: \"DarkToggle\",\n    onChange: event => {\n      setIsDark(event.target.checked);\n      localStorage.setItem('prevState', event.target.checked);\n    },\n    checked: isDark,\n    icons: {\n      checked: /*#__PURE__*/React.createElement(BsMoon, {\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }\n      }),\n      unchecked: /*#__PURE__*/React.createElement(BsSun, {\n        color: \"yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 63\n        }\n      })\n    },\n    \"aria-label\": \"Dark mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default DarkToggle;","map":{"version":3,"sources":["/home/hackerone/Documents/6thsem/reactjs_practice/HealthBridge/client/src/components/darktoggle.js"],"names":["React","useEffect","useState","Toggle","BsMoon","BsSun","DARK_CLASS","DarkToggle","isDark","setIsDark","dark","localStorage","getItem","document","documentElement","classList","add","remove","e","event","target","checked","setItem","unchecked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,UAAU,GAAG,MAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAEvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF;AACA,YAAMS,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAb,CAFE,CAGF;AACA;;AACA,UAAGF,IAAI,IAAI,IAAX,EAAiB;AACfD,QAAAA,SAAS,CAACC,IAAI,KAAG,MAAR,CAAT;;AACA,YAAIA,IAAJ,EAAU;AACRG,UAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuCV,UAAvC;AACD,SAFD,MAEO;AACLO,UAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCE,MAAnC,CAA0CX,UAA1C;AACD;AACF;AACF,KAbD,CAcA,OAAMY,CAAN,EAAS,CAER;AACF,GAlBQ,EAkBN,EAlBM,CAAT;AAoBGjB,EAAAA,SAAS,CAAC,MAAM;AACf;AACC,QAAIO,MAAJ,EAAY;AACVK,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuCV,UAAvC;AACD,KAFD,MAEO;AACLO,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCE,MAAnC,CAA0CX,UAA1C;AACD;AACF,GAPQ,EAON,CAACE,MAAD,CAPM,CAAT,CAxBoB,CAiCrB;;AAEF,sBAEE,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,QAAQ,EAAEW,KAAK,IAAI;AACjBV,MAAAA,SAAS,CAACU,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAT;AACAV,MAAAA,YAAY,CAACW,OAAb,CAAqB,WAArB,EAAkCH,KAAK,CAACC,MAAN,CAAaC,OAA/C;AACD,KALL;AAMI,IAAA,OAAO,EAAEb,MANb;AAOI,IAAA,KAAK,EAAE;AAACa,MAAAA,OAAO,eAAE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AAAoCE,MAAAA,SAAS,eAAE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/C,KAPX;AAQI,kBAAW,WARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAaD,CAhDD;;AAiDA,eAAehB,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { useMediaQuery } from \"react-responsive\";\nimport Toggle from 'react-toggle'\nimport { BsMoon } from \"react-icons/bs\";\nimport { BsSun } from \"react-icons/bs\";\n\nconst DARK_CLASS = \"dark\";\n\nconst DarkToggle = () => {\n\n  const [isDark, setIsDark] = useState(false);\n  \n  useEffect(() => {\n    try {\n      // console.log(\"checking dark ls\")\n      const dark = localStorage.getItem('prevState')\n      // console.log('prevState', dark)\n      // console.log(\"typeof dark\",typeof(dark))\n      if(dark != null) {\n        setIsDark(dark==='true')\n        if (dark) {\n          document.documentElement.classList.add(DARK_CLASS)\n        } else {\n          document.documentElement.classList.remove(DARK_CLASS)\n        }\n      }\n    }\n    catch(e) {\n\n    }\n  }, [])\n\n     useEffect(() => {\n      // console.log(\"changin dark\",isDark)\n       if (isDark) {\n         document.documentElement.classList.add(DARK_CLASS)\n       } else {\n         document.documentElement.classList.remove(DARK_CLASS)\n       }\n     }, [isDark]);\n\n    //  console.log(\"isDark\", isDark)\n\n  return (\n\n    <Toggle \n        className=\"DarkToggle\"\n        onChange={event => {\n          setIsDark(event.target.checked)\n          localStorage.setItem('prevState', event.target.checked)\n        }}\n        checked={isDark}\n        icons={{checked: <BsMoon color=\"white\" />, unchecked: <BsSun color=\"yellow\"/>}}\n        aria-label=\"Dark mode\"\n    />\n  );\n};\nexport default DarkToggle;"]},"metadata":{},"sourceType":"module"}