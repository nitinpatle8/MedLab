{"ast":null,"code":"var _jsxFileName = \"/home/hackerone/Documents/6thsem/reactjs_practice/MediCord/client/src/pages/services/Medicine.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { tokenAtom } from \"../../global/globalState\";\nimport Axios from \"axios\";\n\nconst Medicine = () => {\n  const token = useRecoilValue(tokenAtom);\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [commonNames, setCommonNames] = useState(null);\n\n  const getBrandNames = () => {\n    Axios.post(`http://localhost:5555/generic_name`, {\n      generic_name: enteredName\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(res => {\n      console.log(res.data);\n      setCommonNames(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Medicine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, \"Common Medicine Names\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, \"Making brand names of medicines available to the patient by providing a generic name of the medicine, which are far cheaper and easily available.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"entered-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"medicine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Medicine Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: enteredName,\n    onChange: e => setEnteredName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    onClick: () => getBrandNames(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, \"Get Results\"), commonNames && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"commons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }, \"Common Medicines\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  }, \"General Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }, \"Source\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }\n  }, commonNames.map(med => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, med.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, med.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, med.source))))))))));\n};\n\nexport default Medicine;","map":{"version":3,"sources":["/home/hackerone/Documents/6thsem/reactjs_practice/MediCord/client/src/pages/services/Medicine.js"],"names":["React","useState","useRecoilValue","tokenAtom","Axios","Medicine","token","enteredName","setEnteredName","commonNames","setCommonNames","getBrandNames","post","generic_name","headers","Authorization","then","res","console","log","data","catch","err","e","target","value","map","med","name","price","source"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { tokenAtom } from \"../../global/globalState\";\nimport Axios from \"axios\";\n\nconst Medicine = () => {\n\tconst token = useRecoilValue(tokenAtom);\n\tconst [enteredName, setEnteredName] = useState(\"\");\n\tconst [commonNames, setCommonNames] = useState(null);\n\n\tconst getBrandNames = () => {\n\t\tAxios.post(\n\t\t\t`http://localhost:5555/generic_name`,\n\t\t\t{\n\t\t\t\tgeneric_name: enteredName,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t\t},\n\t\t\t}\n\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetCommonNames(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"Medicine\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<h1>Common Medicine Names</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMaking brand names of medicines available to the patient\n\t\t\t\t\t\tby providing a generic name of the medicine, which are\n\t\t\t\t\t\tfar cheaper and easily available.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"entered-name\">\n\t\t\t\t\t\t<label htmlFor=\"medicine\">Medicine Name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={enteredName}\n\t\t\t\t\t\t\tonChange={(e) => setEnteredName(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"primary\" onClick={() => getBrandNames()}>\n\t\t\t\t\t\tGet Results\n\t\t\t\t\t</button>\n\t\t\t\t\t{commonNames && (\n\t\t\t\t\t\t<div className=\"commons\">\n\t\t\t\t\t\t\t<label htmlFor=\"commons\">Common Medicines</label>\n\t\t\t\t\t\t\t<div className=\"result\">\n\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>General Price</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Source</th>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t{commonNames.map((med) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{med.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{med.price}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{med.source}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Medicine;\n"]},"metadata":{},"sourceType":"module"}