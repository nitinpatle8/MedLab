{"ast":null,"code":"var _jsxFileName = \"/home/hackerone/Documents/6thsem/reactjs_practice/HealthBridge/client/src/pages/services/Covid.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { tokenAtom } from \"../../global/globalState\";\nimport Axios from \"axios\";\n\nconst Covid = () => {\n  const token = useRecoilValue(tokenAtom);\n  const [name, setName] = useState(\"\");\n  const [bloodGroup, setBloodGroup] = useState(\"B+\");\n  const [contact, setContact] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [results, setResults] = useState(null);\n\n  const handleSubmit = () => {\n    Axios.post(`${process.env.REACT_APP_API_URL}/donor/signup`, {\n      name,\n      bloodGroup,\n      phone: contact,\n      age,\n      address\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(res => {\n      setResults([...results, res.data]);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_API_URL}/donor`).then(res => {\n      console.log(res.data);\n      setResults(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Covid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, \"Covid Plasma Donation\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Odit at et aliquam omnis obcaecati voluptas, deserunt\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plasma-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Plasma Info\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroll-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  }, results && results.map(({\n    name,\n    address,\n    _id,\n    phone,\n    bloodGroup\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"bg\",\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }\n  }, bloodGroup), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Name: \", name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Contact : \", phone), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Address : \", address))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plasma-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Submit your info\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plasma-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"blood_group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 8\n    }\n  }, \"Blood group\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"blood_grp\",\n    value: bloodGroup,\n    onChange: e => setBloodGroup(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"AB+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"AB+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"AB-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"AB-\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"A+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"A-\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"B+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"B-\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"O+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"O+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"O-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"O-\")), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }\n  }, \"Contact\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"contact\",\n    value: contact,\n    onChange: e => setContact(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 8\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"age\",\n    value: age,\n    onChange: e => setAge(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 8\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"address\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 8\n    }\n  }, \"Submit\"))))));\n};\n\nexport default Covid;","map":{"version":3,"sources":["/home/hackerone/Documents/6thsem/reactjs_practice/HealthBridge/client/src/pages/services/Covid.js"],"names":["React","useEffect","useState","useRecoilValue","tokenAtom","Axios","Covid","token","name","setName","bloodGroup","setBloodGroup","contact","setContact","address","setAddress","age","setAge","results","setResults","handleSubmit","post","process","env","REACT_APP_API_URL","phone","headers","Authorization","then","res","data","catch","err","console","error","get","log","map","_id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { tokenAtom } from \"../../global/globalState\";\nimport Axios from \"axios\";\n\nconst Covid = () => {\n\tconst token = useRecoilValue(tokenAtom);\n\tconst [name, setName] = useState(\"\");\n\tconst [bloodGroup, setBloodGroup] = useState(\"B+\");\n\tconst [contact, setContact] = useState(\"\");\n\tconst [address, setAddress] = useState(\"\");\n\tconst [age, setAge] = useState(0);\n\n\tconst [results, setResults] = useState(null);\n\n\tconst handleSubmit = () => {\n\t\tAxios.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/donor/signup`,\n\t\t\t{ name, bloodGroup, phone: contact, age, address },\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t\t},\n\t\t\t}\n\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tsetResults([...results, res.data]);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tAxios.get(`${process.env.REACT_APP_API_URL}/donor`)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetResults(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}, []);\n\treturn (\n\t\t<div className=\"Covid\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Covid Plasma Donation</h1>\n\t\t\t\t\t<p className=\"content\">\n\t\t\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit.\n\t\t\t\t\t\tOdit at et aliquam omnis obcaecati voluptas, deserunt\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"plasma-info\">\n\t\t\t\t\t\t<h3>Plasma Info</h3>\n\t\t\t\t\t\t<div className=\"scroll-view\">\n\t\t\t\t\t\t\t<div className=\"cards\">\n\t\t\t\t\t\t\t\t{results &&\n\t\t\t\t\t\t\t\t\tresults\n\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\t\taddress,\n\t\t\t\t\t\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\t\t\t\t\t\tphone,\n\t\t\t\t\t\t\t\t\t\t\t\tbloodGroup,\n\t\t\t\t\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"bg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={_id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{bloodGroup}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tName: {name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"contact\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tContact : {phone}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"address\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAddress : {address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"plasma-submit\">\n\t\t\t\t\t\t<h3>Submit your info</h3>\n\t\t\t\t\t\t<div className=\"plasma-form\">\n\t\t\t\t\t\t\t<label htmlFor=\"Name\">Full Name</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label htmlFor=\"blood_group\">Blood group</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"blood_grp\"\n\t\t\t\t\t\t\t\tvalue={bloodGroup}\n\t\t\t\t\t\t\t\tonChange={(e) => setBloodGroup(e.target.value)}>\n\t\t\t\t\t\t\t\t<option value=\"AB+\">AB+</option>\n\t\t\t\t\t\t\t\t<option value=\"AB-\">AB-</option>\n\t\t\t\t\t\t\t\t<option value=\"A+\">A+</option>\n\t\t\t\t\t\t\t\t<option value=\"A-\">A-</option>\n\t\t\t\t\t\t\t\t<option value=\"B+\">B+</option>\n\t\t\t\t\t\t\t\t<option value=\"B-\">B-</option>\n\t\t\t\t\t\t\t\t<option value=\"O+\">O+</option>\n\t\t\t\t\t\t\t\t<option value=\"O-\">O-</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<label htmlFor=\"contact\">Contact</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"contact\"\n\t\t\t\t\t\t\t\tvalue={contact}\n\t\t\t\t\t\t\t\tonChange={(e) => setContact(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label htmlFor=\"age\">Age</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tid=\"age\"\n\t\t\t\t\t\t\t\tvalue={age}\n\t\t\t\t\t\t\t\tonChange={(e) => setAge(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label htmlFor=\"address\">Address</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => handleSubmit()}>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Covid;\n"]},"metadata":{},"sourceType":"module"}